.686
.model flat
extern _ExitProcess@4 : PROC
extern __write : PROC 
extern __read : PROC 
public _main
.data
tekst_pocz db 10, 'Proszę napisać jakiś tekst '
db 'i nacisnac Enter', 10

koniec_t db ?
magazyn db 80 dup (?)

liczba_znakow dd ?
.code
_main PROC

mov ecx,(OFFSET koniec_t) - (OFFSET tekst_pocz)
push ecx
push OFFSET tekst_pocz ; adres tekstu
push 1
call __write 
add esp, 12 


; czytanie wiersza z klawiatury
push 80 
push OFFSET magazyn
push 0 
call __read 
add esp, 12 

; kody ASCII napisanego tekstu zostały wprowadzone
; do obszaru 'magazyn'
; funkcja read wpisuje do rejestru EAX liczbę
; wprowadzonych znaków



mov liczba_znakow, eax
; rejestr ECX pełni rolę licznika obiegów pętli
mov ecx, eax
mov ebx, 0 ; indeks początkowy
ptl: mov dl, magazyn[ebx] ; pobranie kolejnego znaku
	cmp dl, 65
	ja zmianaA ; skok, gdy znak nie wymaga zamiany
	
	cmp dl, 125
	jb zmianaA

	

zmianaA:
	add dl,37
	jmp dalej




dalej: mov magazyn[ebx], dl 

inc ebx ; inkrementacja indeksu

loop ptl ; sterowanie pętlą



; wyświetlenie przekształconego tekstu
push liczba_znakow
push OFFSET magazyn
push 1
call __write ; wyświetlenie przekształconego tekstu
add esp, 12 ; usuniecie parametrów ze stosu
push 0
call _ExitProcess@4 ; zakończenie programu
_main ENDP
END
